name: Cache Database
description: Cache the database for faster CI runs
inputs:
  E2E_TEST_CALCOM_QA_EMAIL:
    required: false
    description: "E2E test Cal.com QA email"
  E2E_TEST_CALCOM_QA_PASSWORD:
    required: false
    description: "E2E test Cal.com QA password"
  E2E_TEST_CALCOM_QA_GCAL_CREDENTIALS:
    required: false
    description: "E2E test Cal.com QA GCal credentials"
  E2E_TEST_CALCOM_GCAL_KEYS:
    required: false
    description: "E2E test Cal.com GCal keys"
outputs:
  cache-hit:
    description: "Whether the cache was hit"
    value: ${{ steps.cache-db.outputs.cache-hit }}
runs:
  using: "composite"
  steps:
    - name: Cache Database
      id: cache-db
      uses: buildjet/cache@v4
      env:
        cache-name: db-v1
      with:
        path: |
          .cache/db
        key: ${{ env.cache-name }}-${{ hashFiles('packages/prisma/schema.prisma') }}-${{ hashFiles('packages/prisma/migrations/**/*.sql') }}
        restore-keys: |
          ${{ env.cache-name }}-${{ hashFiles('packages/prisma/schema.prisma') }}-
          ${{ env.cache-name }}-

    - name: Setup Database
      if: steps.cache-db.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p .cache/db
        # Run migrations
        yarn prisma migrate deploy
        # Run seeds
        yarn prisma db seed
        # Store test credentials if provided
        if [ -n "${{ inputs.E2E_TEST_CALCOM_QA_EMAIL }}" ]; then
          echo "E2E_TEST_CALCOM_QA_EMAIL=${{ inputs.E2E_TEST_CALCOM_QA_EMAIL }}" >> .cache/db/env
        fi
        if [ -n "${{ inputs.E2E_TEST_CALCOM_QA_PASSWORD }}" ]; then
          echo "E2E_TEST_CALCOM_QA_PASSWORD=${{ inputs.E2E_TEST_CALCOM_QA_PASSWORD }}" >> .cache/db/env
        fi
        if [ -n "${{ inputs.E2E_TEST_CALCOM_QA_GCAL_CREDENTIALS }}" ]; then
          echo "E2E_TEST_CALCOM_QA_GCAL_CREDENTIALS=${{ inputs.E2E_TEST_CALCOM_QA_GCAL_CREDENTIALS }}" >> .cache/db/env
        fi
        if [ -n "${{ inputs.E2E_TEST_CALCOM_GCAL_KEYS }}" ]; then
          echo "E2E_TEST_CALCOM_GCAL_KEYS=${{ inputs.E2E_TEST_CALCOM_GCAL_KEYS }}" >> .cache/db/env
        fi

    - name: Dump Database
      if: steps.cache-db.outputs.cache-hit != 'true'
      uses: tj-actions/pg-dump@v3
      with:
        host: postgres
        port: 5432
        database: calendso
        username: postgres
        password: postgres
        format: custom
        compression: 9
        output: .cache/db/dump.fc

    - name: Restore Database
      if: steps.cache-db.outputs.cache-hit == 'true'
      uses: tj-actions/pg-restore@v6
      with:
        host: postgres
        port: 5432
        database: calendso
        username: postgres
        password: postgres
        input: .cache/db/dump.fc
        drop: true

    - name: Restore Environment
      if: steps.cache-db.outputs.cache-hit == 'true'
      shell: bash
      run: |
        if [ -f ".cache/db/env" ]; then
          while IFS= read -r line; do
            export "$line"
          done < .cache/db/env
        fi
